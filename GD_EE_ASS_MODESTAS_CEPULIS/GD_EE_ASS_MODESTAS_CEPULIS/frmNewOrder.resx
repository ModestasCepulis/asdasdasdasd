<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcbAddNewOrder.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QAECAMgmAKAAAQBkEwBQgAAAsgkAKEAAANkEABQgAIBsAgAKEABANgEABQgAIJsAgAIEAJBNAEABAgDI
        JgCgAAEAZBMAUIAAALIJAChAAADZBAAUIACAbAIAChAAQDYBAAUIACCbAIACBACQTQBAAQIAyCYAoAAB
        AGQTAFCAAACyCQAoQAAA2QQAFCAAgGwCAAoQAEA2AQAFCAAgmwCAAgQAkE0AQAECAMgmAKAAAQBkEwBQ
        gAAAsgkAKEAAANkEABQgAIBsAgAKEABANgEABQgAIJsAgAIEAJBNAEABAgDIJgCgAAEAZBMAUIAAALIJ
        AChAAADZBAAUIACAbAIAChAAQDYBAAUIACCbAIACBACQTQBAAQIAyCYAoAABAGQTAFCAAACyCQAoQAAA
        2QQAFCAAgGwCAAoQAEA2AQAFCAAgmwCAAgQAkE0AQAECAMgmAKAAAQBkEwBQgAAAsgkAKEAAANkEABQg
        AIBsAgAKEABANgEABQgAIJsAgAIEAJBNAEABAgDIJgCgAAEAZBMAUIAAALIJAChAAADZBAAUIACAbAIA
        ChAAQDYBAAUIACCbAIACBACQTQBAAQIAyCYAoAABAGQTAFCAAACyCQAoQAAA2QQAFCAAgGwCAAoQAEA2
        AQAFCAAgmwCAAgQAkE0AQAECAMgmAKAAAQBkEwBQgAAAsgkAKEAAANkEABQgAIBsAgAKEABANgEABQgA
        IJsAgAIEAJBNAEABAgDIJgCgAAEAZBMAUIAAALIJAChAAADZBAAUIACAbAIAChAAQDYBAAUIACCbAIAC
        BACQTQBAAQIAyCYAoAABAGQTAFCAAACyCQAoQAAA2QQAFCAAgGwCAAoQAEA2AQAFCAAgmwCAAgQAkE0A
        QAECAMgmAKAAAQBkEwBQgAAAsgkAKEAAANkEABQgAIBsAgAKEABANgEABQgAIJsAgAIEAJBNAEABAgDI
        JgCgAAEAZBMAUIAAALIJAChAAADZBAAUIACAbAIAChAAQDYBAAUIACCbAIACBACQTQBAAQIAyCYAoAAB
        AGQTAFCAAACyCQAoQAAA2QQAFCAAgGwCAAoQAEA2AQAFCAAgmwCAAqa99t/6+bjxi9i5Z3QbALkEABQQ
        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
</value>
  </data>
  <metadata name="mnsGoBack.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>